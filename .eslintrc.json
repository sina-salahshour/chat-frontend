{
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "extends": [
        "next/core-web-vitals",
        "plugin:import/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:react/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "eslint-plugin-jsdoc",
        "eslint-plugin-prefer-arrow",
        "eslint-plugin-import",
        "eslint-plugin-tailwindcss",
        "sort-imports-es6-autofix",
        "@typescript-eslint",
        "react"
    ],
    "settings": {
        "react": {
            "pragma": "React",
            "fragment": "Fragment",
            "version": "detect"
        }
    },
    "rules": {
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": [
            "warn",
            {
                "default": "array-simple"
            }
        ],
        "@typescript-eslint/ban-types": [
            "warn",
            {
                "types": {
                    "Boolean": {
                        "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
                    },
                    "Function": {
                        "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
                    },
                    "Number": {
                        "message": "Avoid using the `Number` type. Did you mean `number`?"
                    },
                    "Object": {
                        "message": "Avoid using the `Object` type. Did you mean `object`?"
                    },
                    "String": {
                        "message": "Avoid using the `String` type. Did you mean `string`?"
                    },
                    "Symbol": {
                        "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
                    }
                }
            }
        ],
        "@typescript-eslint/consistent-type-assertions": "warn",
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/dot-notation": "warn",
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "accessibility": "explicit"
            }
        ],
        "@typescript-eslint/indent": [
            "warn",
            4,
            {
                "FunctionDeclaration": {
                    "parameters": "first"
                },
                "FunctionExpression": {
                    "parameters": "first"
                },
                "SwitchCase": 1
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "warn",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/naming-convention": [
            "warn",
            {
                "format": ["camelCase"],
                "modifiers": ["const"],
                "selector": "variable",
                "types": ["function"]
            },
            {
                "format": ["PascalCase", "camelCase"],
                "modifiers": ["const", "exported"],
                "selector": "variable",
                "types": ["function"]
            },
            {
                "format": ["PascalCase"],
                "prefix": [
                    "is",
                    "was",
                    "should",
                    "has",
                    "have",
                    "had",
                    "can",
                    "could",
                    "do",
                    "did",
                    "will",
                    "would"
                ],
                "selector": "variable",
                "types": ["boolean"]
            }
        ],
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-misused-new": "warn",
        "@typescript-eslint/no-namespace": "warn",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-shadow": "warn",
        "@typescript-eslint/no-unused-expressions": "warn",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "args": "all",
                "argsIgnorePattern": "^_",
                "varsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-namespace-keyword": "warn",
        "@typescript-eslint/quotes": [
            "warn",
            "double",
            {
                "avoidEscape": true
            }
        ],
        "@typescript-eslint/semi": ["warn", "always"],
        "@typescript-eslint/triple-slash-reference": [
            "warn",
            {
                "lib": "always",
                "path": "always",
                "types": "prefer-import"
            }
        ],
        "@typescript-eslint/type-annotation-spacing": "warn",
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/unified-signatures": "warn",
        "array-bracket-spacing": ["warn", "always"],
        "arrow-body-style": ["warn", "as-needed"],
        "arrow-parens": ["warn", "always"],
        "arrow-spacing": [
            "warn",
            {
                "after": true,
                "before": true
            }
        ],
        "brace-style": ["warn", "1tbs"],
        "comma-dangle": [
            "warn",
            {
                "arrays": "always-multiline",
                "exports": "never",
                "functions": "never",
                "imports": "never",
                "objects": "always-multiline"
            }
        ],
        "comma-spacing": [
            "warn",
            {
                "after": true,
                "before": false
            }
        ],
        "complexity": "off",
        "computed-property-spacing": ["warn", "never"],
        "constructor-super": "warn",
        "curly": "warn",
        "eol-last": "warn",
        "eqeqeq": ["warn", "smart"],
        "function-paren-newline": ["warn", "consistent"],
        "function-call-argument-newline": ["warn", "consistent"],
        "guard-for-in": "warn",
        "id-blacklist": [
            "warn",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
        ],
        "id-match": "warn",
        "import/newline-after-import": [
            "warn",
            {
                "count": 1
            }
        ],
        "import/no-absolute-path": "error",
        "import/order": "off",
        "jsdoc/check-alignment": "warn",
        "jsdoc/check-indentation": "warn",
        "key-spacing": [
            "warn",
            {
                "afterColon": true,
                "beforeColon": false,
                "mode": "strict"
            }
        ],
        "keyword-spacing": [
            "warn",
            {
                "after": true,
                "before": true
            }
        ],
        "max-classes-per-file": ["warn", 1],
        "max-len": [
            "warn",
            {
                "code": 200
            }
        ],
        "new-parens": "warn",
        "no-bitwise": "off",
        "no-caller": "warn",
        "no-cond-assign": "warn",
        "no-console": "warn",
        "no-debugger": "warn",
        "no-empty": "warn",
        "no-eval": "warn",
        "no-fallthrough": "warn",
        "no-invalid-this": "off",
        "no-mixed-operators": "warn",
        "no-multi-spaces": "warn",
        "no-multiple-empty-lines": [
            "warn",
            {
                "max": 1,
                "maxBOF": 0,
                "maxEOF": 1
            }
        ],
        "no-new-wrappers": "warn",
        "no-shadow": "off",
        "no-throw-literal": "warn",
        "no-trailing-spaces": "warn",
        "no-undef-init": "warn",
        "no-underscore-dangle": "warn",
        "no-unsafe-finally": "warn",
        "no-unused-labels": "warn",
        "no-unused-vars": "off",
        "no-var": "warn",
        "object-curly-spacing": ["warn", "always"],
        "object-curly-newline": [
            "warn",
            {
                "ObjectExpression": {
                    "multiline": true,
                    "consistent": true
                },
                "ObjectPattern": {
                    "multiline": true,
                    "consistent": true
                },
                "ImportDeclaration": {
                    "multiline": true,
                    "minProperties": 8,
                    "consistent": true
                },
                "ExportDeclaration": "never"
            }
        ],
        "object-property-newline": [
            "warn",
            {
                "allowMultiplePropertiesPerLine": true
            }
        ],
        "object-shorthand": "warn",
        "one-var": ["warn", "never"],
        "prefer-arrow/prefer-arrow-functions": "warn",
        "padded-blocks": ["warn", "never"],
        "prefer-const": "warn",
        "quote-props": ["warn", "consistent-as-needed"],
        "radix": "warn",
        "react/self-closing-comp": [
            "warn",
            {
                "component": true,
                "html": true
            }
        ],
        "sort-imports": "off",
        "sort-imports-es6-autofix/sort-imports-es6": [
            "warn",
            {
                "ignoreCase": true,
                "memberSyntaxSortOrder": ["none", "all", "multiple", "single"]
            }
        ],
        "space-before-blocks": ["warn", "always"],
        "space-before-function-paren": [
            "warn",
            {
                "anonymous": "never",
                "asyncArrow": "always",
                "named": "never"
            }
        ],
        "space-in-parens": ["warn", "never"],
        "space-infix-ops": [
            "warn",
            {
                "int32Hint": true
            }
        ],
        "spaced-comment": [
            "warn",
            "always",
            {
                "markers": ["/"]
            }
        ],
        "use-isnan": "warn",
        "valid-typeof": "off",
        "tailwindcss/classnames-order": ["warn",{
            "callees": ["classnames","cn"]
        }]
    }
}
